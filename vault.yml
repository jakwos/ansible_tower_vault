- name: test encrypt strings with ansible-vault
  hosts: localhost
  gather_facts: false
  vars:
    file_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          62626538613239306631643937323334346164646434333963343366316632363862663961343931
          6461306363373034643535366235643831343135636566650a363835353965666230623332363566
          64643063653032336266613133386438323039393361383538393665346665373336373962636133
          6639656136633436390a633461303039333038646538313538373462313838373436393039363362
          6363
  vars_files:
    - passwords.json

  tasks:

  - name: save vault password to file
    local_action:
      module: copy
      content: "{{ file_pass }}"
      dest: /tmp/tmp_pass
    run_once: true

# - name: encrypt string with file
#   command: ansible-vault encrypt_string "mysuperpasswd" --name dbpass --vault-password-file /tmp/tmp_pass
#   register: encrypted_variable

# - name: show encrypted pass
#   debug:
#     var: encrypted_variable

  - name: show passwords from file
    debug: 
      var: users

  - name: encrypt passwords from input file
    command: ansible-vault encrypt_string "{{ item.password }}" --name "{{ item.username }}_enc_pass" --vault-password-file /tmp/tmp_pass
    with_items: "{{ users }}"
    register: users_passwords

  - name: show encrypted passwords
    debug:
      msg: "{{ item.stdout }}"
    with_items: "{{ users_passwords.results }}"
    loop_control:
      label: "{{ item.item.username }}"

  - name: save passwords to file
    local_action:
      module: blockinfile 
      block: |
        "{{ item.stdout }}"
      path: ./encrypted_passwords.txt
      create: yes
    with_items: "{{ users_passwords.results }}"
   # run_once: true
